{"version":3,"file":"index.js","mappings":"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","sources":["webpack://intelli-builder/./src/admin-settings/ApiKeySettings.jsx","webpack://intelli-builder/./src/admin-settings/App.jsx","webpack://intelli-builder/external window \"React\"","webpack://intelli-builder/external window [\"wp\",\"apiFetch\"]","webpack://intelli-builder/external window [\"wp\",\"element\"]","webpack://intelli-builder/webpack/bootstrap","webpack://intelli-builder/webpack/runtime/compat get default export","webpack://intelli-builder/webpack/runtime/define property getters","webpack://intelli-builder/webpack/runtime/hasOwnProperty shorthand","webpack://intelli-builder/webpack/runtime/make namespace object","webpack://intelli-builder/./src/admin-settings/index.jsx"],"sourcesContent":["const ApiKeySettings = ({ label, enabled, apiKey, onToggle, onApiKeyChange }) => {\n    return (\n        <div>\n            <label>\n                <input\n                    type=\"checkbox\"\n                    checked={enabled}\n                    onChange={(e) => onToggle(e.target.checked)}\n                />\n                {label}\n            </label>\n            {enabled && (\n                <div>\n                    <input\n                        type=\"text\"\n                        value={apiKey}\n                        onChange={(e) => onApiKeyChange(e.target.value)}\n                        placeholder=\"Enter API Key\"\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ApiKeySettings;\n","import { useState, useEffect } from 'react';\nimport ApiKeySettings from './ApiKeySettings';\nimport apiFetch from '@wordpress/api-fetch';\n\nconst App = () => {\n    const [settings, setSettings] = useState({\n        enable_chatgpt: false,\n        chatgpt_api_key: '',\n        enable_gemini: false,\n        gemini_api_key: ''\n    });\n\n    useEffect(() => {\n        apiFetch({\n            url: intellibuilderSettings.apiUrl,\n            method: 'GET',\n            headers: {\n\t\t\t\t'Content-Type':'application/json',\n                'X-WP-Nonce': intellibuilderSettings.nonce\n            }\n        }).then((response) => {\n            setSettings(response);\n        });\n    }, []);\n\n    const handleSave = () => {\n        apiFetch({\n            url: intellibuilderSettings.apiUrl,\n            method: 'POST',\n            headers: {\n\t\t\t\t'Content-Type':'application/json',\n                'X-WP-Nonce': intellibuilderSettings.nonce\n            },\n            body: JSON.stringify(settings)\n        }).then(() => {\n            alert('Settings saved!');\n        });\n    };\n\n    return (\n        <div>\n            <h1>IntelliBuilder Settings</h1>\n            <ApiKeySettings\n                label=\"Enable ChatGPT\"\n                enabled={settings.enable_chatgpt}\n                apiKey={settings.chatgpt_api_key}\n                onToggle={(enabled) => setSettings({ ...settings, enable_chatgpt: enabled })}\n                onApiKeyChange={(apiKey) => setSettings({ ...settings, chatgpt_api_key: apiKey })}\n            />\n            <ApiKeySettings\n                label=\"Enable Gemini\"\n                enabled={settings.enable_gemini}\n                apiKey={settings.gemini_api_key}\n                onToggle={(enabled) => setSettings({ ...settings, enable_gemini: enabled })}\n                onApiKeyChange={(apiKey) => setSettings({ ...settings, gemini_api_key: apiKey })}\n            />\n            <button onClick={handleSave}>Save Settings</button>\n        </div>\n    );\n};\n\nexport default App;\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { createRoot } from '@wordpress/element';\nimport App from './App';\n\nconsole.log('intellibuilderSettings', intellibuilderSettings);\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const rootElement = document.getElementById('intellibuilder-admin-settings');\n    if (rootElement) {\n        createRoot(rootElement).render(<App />);\n    }\n});\n"],"names":["ApiKeySettings","label","enabled","apiKey","onToggle","onApiKeyChange","createElement","type","checked","onChange","e","target","value","placeholder","useState","useEffect","apiFetch","App","settings","setSettings","enable_chatgpt","chatgpt_api_key","enable_gemini","gemini_api_key","url","intellibuilderSettings","apiUrl","method","headers","nonce","then","response","handleSave","body","JSON","stringify","alert","onClick","createRoot","console","log","document","addEventListener","rootElement","getElementById","render"],"sourceRoot":""}